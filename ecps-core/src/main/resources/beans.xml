<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-3.0.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.lbj.ecps" />

	<!-- 配置连接池 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<bean id="mysql_dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${mysql.driver}" />
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${mysql.initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${mysql.maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${mysql.maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${mysql.minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${mysql.maxWait}"></property>
	</bean>

	<bean id="oracle_dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${oracle.driver}" />
		<property name="url" value="${oracle.url}" />
		<property name="username" value="${oracle.username}" />
		<property name="password" value="${oracle.password}" />
	</bean>

	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="oracle_dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/lbj/sqlMapper/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lbj.ecps.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!--自动扫描缓存配置-->
	<!--<cache:annotation-driven cache-manager="cacheManager"/>
	<bean id="cacheManagerFactory"
		  class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="cacheManagerFactory" />
	</bean>-->

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="oracle_dataSource" />
	</bean>
	<!--注解的形式处理事务-->
	<!--<tx:annotation-driven transaction-manager="transactionManager" /> -->
	
	
	    <!-- 拦截器方式配置事物-->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="duliUser" propagation="REQUIRES_NEW" />
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
			<tx:method name="validate*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut  id="transactionPointcut" expression="execution(* com.lbj.ecps.service..*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config> 
    
<!--    <bean id="taskExecutor"
    	class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"> 
    	<property name="corePoolSize" value="3" /> 
    	<property name="keepAliveSeconds" value="200" /> 
    	<property name="maxPoolSize" value="5" /> 
    	<property name="queueCapacity" value="25" /> 
  	</bean>
  	
  	
  	<import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>
    &lt;!&ndash; 自动扫描webService &ndash;&gt;
    <context:component-scan base-package="com.crossoverJie.cxf" />
    &lt;!&ndash; 定义webservice的发布接口  &ndash;&gt;
    <jaxws:endpoint
            implementor="#myWebService"
            address="/MyWebService"/>-->
</beans>